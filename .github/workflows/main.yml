name: Build Sample Project

on:
  pull_request:
    types: [opened, reopened, review_requested, synchronize]
  workflow_dispatch:

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - 'Samples/AppKit Sample'
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          # - StandaloneWindows # Build a Windows standalone.
          # - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
          - WebGL # WebGL.
    steps:
      - if: matrix.targetPlatform == 'Android' || matrix.targetPlatform == 'WebGL'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          buildsPath: Build
          projectPath: ${{ matrix.projectPath }}
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -Development
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: Build/${{ matrix.targetPlatform }}

  deployToVercel:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download WebGL Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Build-WebGL
          path: Build/WebGL
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          github-comment: true
          working-directory: Build/WebGL/WebGL

  deployAndroid:
    name: Deploy Android APK
    runs-on: ubuntu-latest
    needs: buildForAllSupportedPlatforms
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download Android Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: Build-Android
          path: Build/Android
      - name: Install dotnet-script
        run: dotnet tool install -g dotnet-script
      - name: Generate QR Code
        id: generate_qr
        run: |
          apk_url=$(gh api -X GET "repos/${{ github.repository }}/actions/artifacts" | jq -r '.artifacts[] | select(.name=="Build-Android") | .archive_download_url')
          dotnet-script ./.github/workflows/scripts/generate-qr.csx $apk_url qr_code.png
      - name: Upload QR Code
        uses: actions/upload-artifact@v3
        with:
          name: qr-code
          path: qr_code.png
      - name: Post Comment with APK Link and QR Code
        run: |
          apk_url=$(gh api -X GET "repos/${{ github.repository }}/actions/artifacts" | jq -r '.artifacts[] | select(.name=="Build-Android") | .archive_download_url')
          gh pr comment ${{ github.event.pull_request.number }} --body "APK is available for download [here](${apk_url}). ![QR Code](https://raw.githubusercontent.com/${{ github.repository }}/$(git rev-parse HEAD)/qr_code.png)"
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
